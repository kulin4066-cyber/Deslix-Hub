local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};_G.Cs={UQSDDAA=3,YASDMRXA=1,YASa0AVV=2};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 +  #Cs + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\186\82","\127\148\124\41\119\24\231"),function(v42) if (v9(v42,2)==(253 -172)) then v30=v8(v11(v42,1,2 -1 ));return "";else local v100=0;local v101;while true do if (v100==0) then v101=v10(v8(v42,16));if v30 then local v118=0;local v119;while true do if (v118==0) then v119=v13(v101,v30);v30=nil;v118=1;end if (v118==1) then return v119;end end else return v101;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v102=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v102-(v102%1) ;else local v103=0;local v104;while true do if (v103==0) then v104=2^(v44-1) ;return (((v43%(v104 + v104))>=v104) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * 16777216) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35() local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==3) then if (v58==0) then if (v57==0) then return v59 * 0 ;else local v120=0;while true do if (v120==0) then v58=1;v56=931 -(857 + 74) ;break;end end end elseif (v58==(2615 -(367 + 201))) then return ((v57==0) and (v59 * ((928 -(214 + 713))/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/((1 + 1)^52))) ;end if (v53==1) then v56=1;v57=(v31(v55,1 -0 ,20) * (2^32)) + v54 ;v53=2;end if (v53==2) then v58=v31(v55,21,31);v59=((v31(v55,82 -50 )==(620 -(555 + 64))) and  -1) or 1 ;v53=3;end if (v53==0) then v54=v34();v55=v34();v53=1;end end end local function v36(v60) local v61;if  not v60 then local v105=0;while true do if (v105==0) then v60=v34();if (v60==0) then return "";end break;end end end v61=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;local v62={};for v76=1 + 0 , #v61 do v62[v76]=v10(v9(v11(v61,v76,v76)));end return v14(v62);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v63={};local v64={};local v65={};local v66={v63,v64,nil,v65};local v67=v34();local v68={};for v78=1,v67 do local v79=v32();local v80;if (v79==1) then v80=v32()~=0 ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v68[v78]=v80;end v66[3]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,1,1)==0) then local v109=0;local v110;local v111;local v112;while true do if (v109==3) then if (v31(v111,3 -0 ,3)==1) then v112[1069 -(68 + 997) ]=v68[v112[4]];end v63[v82]=v112;break;end if (2==v109) then if (v31(v111,1638 -(1523 + 114) ,1)==1) then v112[2]=v68[v112[2]];end if (v31(v111,2,2)==(1 + 0)) then v112[3]=v68[v112[3]];end v109=3;end if (v109==1) then v112={v33(),v33(),nil,nil};if (v110==(877 -(282 + 595))) then v112[3]=v33();v112[4]=v33();elseif (v110==1) then v112[3]=v34();elseif (v110==2) then v112[3]=v34() -(2^16) ;elseif (v110==3) then local v131=0;while true do if (0==v131) then v112[3]=v34() -(2^16) ;v112[4]=v33();break;end end end v109=2;end if (v109==0) then v110=v31(v83,2,3);v111=v31(v83,4,6);v109=1;end end end end for v84=1,v34() do v64[v84-(1271 -(226 + 1044)) ]=v39();end return v66;end local function v40(v70,v71,v72) local v73=v70[1];local v74=v70[8 -6 ];local v75=v70[3];return function(...) local v86=v73;local v87=v74;local v88=v75;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v106=0,v94 do if (v106>=v88) then v92[v106-v88 ]=v93[v106 + 1 ];else v96[v106]=v93[v106 + 1 ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do v98=v86[v90];v99=v98[1];if (v99<=38) then if (v99<=18) then if (v99<=8) then if (v99<=3) then if (v99<=1) then if (v99==0) then local v132=v87[v98[3]];local v133;local v134={};v133=v18({},{[v7("\46\189\36\171\211\20\154","\183\113\226\77\197")]=function(v218,v219) local v220=0;local v221;while true do if (v220==0) then v221=v134[v219];return v221[1][v221[2]];end end end,[v7("\127\102\187\217\87\80\187\216\69\65","\188\32\57\213")]=function(v222,v223,v224) local v225=0;local v226;while true do if (0==v225) then v226=v134[v223];v226[1][v226[2]]=v224;break;end end end});for v227=1,v98[4] do v90=v90 + 1 ;local v228=v86[v90];if (v228[1]==35) then v134[v227-1 ]={v96,v228[3]};else v134[v227-1 ]={v71,v228[3]};end v95[ #v95 + 1 + 0 ]=v134;end v96[v98[2]]=v40(v132,v133,v72);else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99==2) then v96[v98[2]]();elseif  not v96[v98[1 + 1 ]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=5) then if (v99>(961 -(892 + 65))) then do return v96[v98[2]]();end else for v230=v98[2],v98[7 -4 ] do v96[v230]=nil;end end elseif (v99<=6) then v96[v98[2]]=v96[v98[3]]%v98[4] ;elseif (v99==7) then v90=v98[3];else local v239=v98[3 -1 ];local v240=v96[v239];local v241=v96[v239 + 2 ];if (v241>0) then if (v240>v96[v239 + 1 ]) then v90=v98[3];else v96[v239 + 3 ]=v240;end elseif (v240<v96[v239 + 1 ]) then v90=v98[3];else v96[v239 + 3 ]=v240;end end elseif (v99<=13) then if (v99<=10) then if (v99==9) then local v138=v98[2];v96[v138]=v96[v138]();else v96[v98[2]]=v98[4 -1 ];end elseif (v99<=11) then v96[v98[2]]=v96[v98[3]];elseif (v99>12) then local v242=v98[352 -(87 + 263) ];local v243,v244=v89(v96[v242](v96[v242 + 1 ]));v91=(v244 + v242) -1 ;local v245=0;for v300=v242,v91 do local v301=0;while true do if (v301==0) then v245=v245 + 1 ;v96[v300]=v243[v245];break;end end end else local v246=0;local v247;while true do if (v246==0) then v247=v98[2];v96[v247]=v96[v247](v21(v96,v247 + 1 ,v91));break;end end end elseif (v99<=15) then if (v99==14) then v96[v98[2]][v96[v98[183 -(67 + 113) ]]]=v98[4];else local v146=0;local v147;while true do if (v146==0) then v147=v98[2];v96[v147](v96[v147 + 1 ]);break;end end end elseif (v99<=16) then do return v96[v98[2]]();end elseif (v99==17) then v96[v98[2]]=v96[v98[3 + 0 ]]%v96[v98[4]] ;else local v249=0;local v250;while true do if (v249==0) then v250=v98[2];v96[v250](v21(v96,v250 + 1 ,v91));break;end end end elseif (v99<=28) then if (v99<=23) then if (v99<=20) then if (v99>19) then v96[v98[2]][v98[3]]=v98[4];else local v150=v98[2];local v151,v152=v89(v96[v150](v21(v96,v150 + 1 ,v98[3])));v91=(v152 + v150) -(2 -1) ;local v153=0 + 0 ;for v232=v150,v91 do local v233=0;while true do if (v233==0) then v153=v153 + 1 ;v96[v232]=v151[v153];break;end end end end elseif (v99<=21) then do return;end elseif (v99==22) then local v251=v98[2];local v252=v96[v251];for v303=v251 + 1 ,v91 do v15(v252,v96[v303]);end else local v253=0;local v254;local v255;local v256;while true do if (v253==0) then v254=v87[v98[3]];v255=nil;v253=1;end if (v253==2) then for v351=1,v98[4] do v90=v90 + 1 ;local v352=v86[v90];if (v352[1]==35) then v256[v351-1 ]={v96,v352[3]};else v256[v351-(953 -(802 + 150)) ]={v71,v352[3]};end v95[ #v95 + 1 ]=v256;end v96[v98[2]]=v40(v254,v255,v72);break;end if (v253==1) then v256={};v255=v18({},{[v7("\203\63\68\85\18\241\24","\118\148\96\45\59")]=function(v354,v355) local v356=0;local v357;while true do if (0==v356) then v357=v256[v355];return v357[1][v357[2]];end end end,[v7("\105\141\254\21\163\95\188\244\21\172","\212\54\210\144\112")]=function(v358,v359,v360) local v361=0;local v362;while true do if (v361==0) then v362=v256[v359];v362[3 -2 ][v362[2]]=v360;break;end end end});v253=2;end end end elseif (v99<=25) then if (v99==24) then local v154=v98[2];local v155=v96[v154 + (5 -3) ];local v156=v96[v154] + v155 ;v96[v154]=v156;if (v155>0) then if (v156<=v96[v154 + 1 ]) then v90=v98[3];v96[v154 + 3 ]=v156;end elseif (v156>=v96[v154 + 1 ]) then v90=v98[3];v96[v154 + 3 ]=v156;end else local v158=0;local v159;while true do if (0==v158) then v159=v98[2];do return v96[v159](v21(v96,v159 + (1 -0) ,v98[3]));end break;end end end elseif (v99<=26) then local v160=0;local v161;while true do if (v160==0) then v161=v98[2 + 0 ];v96[v161]=v96[v161](v21(v96,v161 + 1 ,v98[1000 -(915 + 82) ]));break;end end elseif (v99>27) then v96[v98[5 -3 ]]=v72[v98[3]];else v96[v98[2]]();end elseif (v99<=33) then if (v99<=30) then if (v99==(17 + 12)) then local v162=0;local v163;local v164;local v165;while true do if (v162==1) then v165=v96[v163 + 2 ];if (v165>0) then if (v164>v96[v163 + 1 ]) then v90=v98[3];else v96[v163 + 3 ]=v164;end elseif (v164<v96[v163 + 1 ]) then v90=v98[3];else v96[v163 + (3 -0) ]=v164;end break;end if (v162==0) then v163=v98[2];v164=v96[v163];v162=1;end end elseif v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=31) then local v166=v98[2];local v167,v168=v89(v96[v166](v21(v96,v166 + 1 ,v91)));v91=(v168 + v166) -1 ;local v169=0;for v234=v166,v91 do v169=v169 + 1 ;v96[v234]=v167[v169];end elseif (v99==(1219 -(1069 + 118))) then if  not v96[v98[4 -2 ]] then v90=v90 + (1 -0) ;else v90=v98[3];end else local v260=0;local v261;local v262;local v263;local v264;while true do if (v260==1) then v91=(v263 + v261) -1 ;v264=0;v260=2;end if (2==v260) then for v363=v261,v91 do local v364=0;while true do if (v364==0) then v264=v264 + 1 ;v96[v363]=v262[v264];break;end end end break;end if (v260==0) then v261=v98[2];v262,v263=v89(v96[v261](v21(v96,v261 + 1 ,v98[3])));v260=1;end end end elseif (v99<=35) then if (v99==(6 + 28)) then v96[v98[2]]=v98[3];else v96[v98[2]]=v96[v98[3]];end elseif (v99<=(63 -27)) then v96[v98[2 + 0 ]]=v96[v98[3]] + v96[v98[4]] ;elseif (v99==37) then for v310=v98[2],v98[794 -(368 + 423) ] do v96[v310]=nil;end elseif (v96[v98[6 -4 ]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=57) then if (v99<=47) then if (v99<=42) then if (v99<=40) then if (v99==39) then v96[v98[20 -(10 + 8) ]]=v96[v98[3]] + v96[v98[4]] ;else v96[v98[2]]= #v96[v98[3]];end elseif (v99>41) then v96[v98[2]]=v71[v98[3]];else local v179=0;local v180;while true do if (0==v179) then v180=v98[7 -5 ];v96[v180]=v96[v180](v21(v96,v180 + 1 ,v91));break;end end end elseif (v99<=44) then if (v99>43) then local v181=0;local v182;local v183;local v184;local v185;while true do if (2==v181) then for v336=v182,v91 do local v337=0;while true do if (0==v337) then v185=v185 + (443 -(416 + 26)) ;v96[v336]=v183[v185];break;end end end break;end if (v181==0) then v182=v98[2];v183,v184=v89(v96[v182](v96[v182 + 1 ]));v181=1;end if (1==v181) then v91=(v184 + v182) -1 ;v185=0;v181=2;end end else v96[v98[2]][v98[3]]=v98[4];end elseif (v99<=(143 -98)) then v96[v98[2]]=v96[v98[3]][v98[4]];elseif (v99==(20 + 26)) then v96[v98[2]][v96[v98[3]]]=v96[v98[4]];else v96[v98[3 -1 ]][v96[v98[3]]]=v98[4];end elseif (v99<=52) then if (v99<=(487 -(145 + 293))) then if (v99>48) then local v190=0;local v191;while true do if (v190==0) then v191=v98[432 -(44 + 386) ];v96[v191]=v96[v191]();break;end end else local v192=0;local v193;while true do if (v192==0) then v193=v98[2];do return v96[v193](v21(v96,v193 + 1 ,v98[1489 -(998 + 488) ]));end break;end end end elseif (v99<=(16 + 34)) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==51) then v96[v98[2]]=v71[v98[3]];else v96[v98[2]]= #v96[v98[3]];end elseif (v99<=54) then if (v99>53) then local v194=v98[2];v96[v194](v96[v194 + 1 ]);else local v195=0;local v196;while true do if (v195==0) then v196=v98[2];v96[v196]=v96[v196](v21(v96,v196 + 1 ,v98[3]));break;end end end elseif (v99<=55) then local v197=0;local v198;while true do if (v197==0) then v198=v98[2];do return v21(v96,v198,v91);end break;end end elseif (v99>56) then local v273=v98[2];local v274,v275=v89(v96[v273](v21(v96,v273 + 1 ,v91)));v91=(v275 + v273) -(1 + 0) ;local v276=0;for v321=v273,v91 do local v322=0;while true do if (0==v322) then v276=v276 + 1 ;v96[v321]=v274[v276];break;end end end else local v277=v98[774 -(201 + 571) ];local v278=v96[v98[3]];v96[v277 + 1 ]=v278;v96[v277]=v278[v98[1142 -(116 + 1022) ]];end elseif (v99<=(278 -211)) then if (v99<=(37 + 25)) then if (v99<=(215 -156)) then if (v99==58) then v96[v98[2]]=v96[v98[3]]%v98[4] ;else v96[v98[2]][v98[3]]=v96[v98[4]];end elseif (v99<=60) then v96[v98[7 -5 ]]=v96[v98[3]]%v96[v98[4]] ;elseif (v99==61) then v96[v98[2]]={};else local v283=v98[2];local v284=v96[v283 + 2 ];local v285=v96[v283] + v284 ;v96[v283]=v285;if (v284>0) then if (v285<=v96[v283 + 1 ]) then local v367=0;while true do if (v367==0) then v90=v98[3];v96[v283 + 3 ]=v285;break;end end end elseif (v285>=v96[v283 + 1 ]) then v90=v98[3];v96[v283 + 3 ]=v285;end end elseif (v99<=64) then if (v99==63) then v96[v98[2]]={};else local v204=0;local v205;local v206;while true do if (1==v204) then for v338=v205 + 1 ,v91 do v15(v206,v96[v338]);end break;end if (v204==0) then v205=v98[2];v206=v96[v205];v204=1;end end end elseif (v99<=65) then v96[v98[2]]=v96[v98[3]] + v98[4] ;elseif (v99>66) then v90=v98[3];else v96[v98[861 -(814 + 45) ]]=v96[v98[3]] + v98[9 -5 ] ;end elseif (v99<=(4 + 68)) then if (v99<=69) then if (v99>68) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[2 + 1 ];end else local v208=v98[2];local v209=v96[v98[888 -(261 + 624) ]];v96[v208 + 1 ]=v209;v96[v208]=v209[v98[4]];end elseif (v99<=(124 -54)) then local v213=v98[2];v96[v213](v21(v96,v213 + 1 ,v91));elseif (v99==71) then v96[v98[2]]=v72[v98[3]];else local v292=v98[1082 -(1020 + 60) ];do return v21(v96,v292,v91);end end elseif (v99<=(1497 -(630 + 793))) then if (v99==73) then do return;end else v96[v98[2]]=v96[v98[3]][v98[4]];end elseif (v99<=(253 -178)) then v96[v98[2]][v98[3]]=v96[v98[4]];elseif (v99>76) then v96[v98[2]][v96[v98[3]]]=v96[v98[4]];else v96[v98[2]]=v98[3] + v96[v98[4]] ;end v90=v90 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
